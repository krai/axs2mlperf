{
    "_parent_entries": [
        [ "^", "byname", "shell" ]
    ],
    "_producer_rules": [
        [ [ "container_trtllm_loadgen_output" ], ["run"], {
        } ]
    ],
    "user": [ "^^", "get_user_name" ],
    "hostname": [ "^^", "get_hostname" ],

    "source_dir": "/home/oleg/TensorRT-LLM",
    "code_dir": "/code/tensorrt_llm",
    "cache_dir": "/cpp/.ccache",
    
    "container_name": [ "^^", "substitute", "axs_#{user}#" ],
    "container_local_dir": "/home/krai/work_collection/",

    "local_dir": [ "^^", "substitute", "/home/#{user}#/work_collection/" ],
    "local_experiment_dir_name": "experiments",
    "local_experiments_dir": [ "^^", "substitute", "/home/#{user}#/work_collection/" ],

    "container_id": [ "^^", "substitute", "`if [ $(docker ps -qf \"name=#{container_name}#\" | head -c1 | wc -c) -ne 0 ]; then docker ps -qf \"name=#{container_name}#\"; else docker run -dt --name #{container_name}# --ipc=host --ulimit memlock=#{memlock}# --ulimit stack=#{stack}# --gpus=#{gpus}# #{mounted_repos_str}# #{ccache_dirs}# --workdir #{code_dir}# --hostname #{hostname}# --tmpfs #{tmpfs}# --rm #{image_name}#:#{image_tag}# bash; fi;`" ],

    "repo_list": [ "axs2tensorrt-dev", "experiments" ],
    "mounted_repos_str": [ "^^", "create_mounted_string" ],
    "ccache_dirs": [ "^^", "create_ccache_dirs" ],

    "ccache_dir": "/code/tensorrt_llm/cpp/.ccache",
    "ccache_basedir": "/code/tensorrt_llm",

    "image_name": "tensorrt_llm/release",
    "image_tag": "latest",

    "container_only": false,

    "cmd": [ "^^", "case",   [ [ "^^", "get", "container_only" ],
        true, [ "^^","substitute", "export CONTAINER_ID=#{container_id}# ; echo \" Container has been created. CONTAINER_ID =  ${CONTAINER_ID} \"" ]] ,
        { "default_value": [ "^^","substitute", " docker exec #{container_id}# bash -c  \"axs byquery #{modified_query}#\""] }
    ],

    "modified_query": [ "^^", "execute", [[
        [ "get", "__query" ],
        [ "replace", ["container_trtllm_loadgen_output", "loadgen_output"] ]
    ]] ],
    "shell_cmd_with_subs": "#{cmd}#"
}
