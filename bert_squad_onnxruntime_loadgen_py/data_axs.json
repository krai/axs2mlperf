{
    "_parent_entries": [ [ "^", "byname", "python_script" ], [ "^", "byname", "base_loadgen_program" ] ],
    "_producer_rules": [
        [ [ "loadgen_output", "bert_squad", "framework=onnx" ], [["run"]], { "return_saved_record_entry": true } ]
    ],

    "num_gpus": [ "^", "execute", [[
                       [ "byquery", "shell_tool,can_gpu" ],
                       [ "run" ]
                ]] ],

    "onnxruntime_name": [ "^", "case",[ ["^^", "get", "num_gpus"], "0", "onnxruntime" ], {"default_value": "onnxruntime-gpu"}, ["num_gpus"]],
    "onnxruntime_query": [ "python_package", ["package_name", ["^^", "get", "onnxruntime_name"]] ],

    "tensorflow_query": ["python_package", "package_name=tensorflow"],
    "loadgen_query":    [ "python_package", "package_name=mlperf_loadgen" ],

    "python_deps": [
        [ "^", "byquery", [ [ "^^", "get", "tensorflow_query" ] ], {}, ["tensorflow_query"] ],
        [ "^", "byquery", [ [ "^^", "get", "onnxruntime_query" ] ], {}, ["onnxruntime_query"] ],
        [ "^", "byquery", [ [ "^^", "get", "loadgen_query" ] ], {}, ["loadgen_query"] ]
    ],
    "mlperf_inference_git_entry": [ "^", "byquery", "git_repo,repo_name=mlperf_inference_git" ],

    "mlperf_inference_path": [ "^^", "execute", [[
        [ "get", "mlperf_inference_git_entry" ],
        [ "get_path" ]
    ]], {}, ["mlperf_inference_git_entry"] ],

    "model_name": "bert_large",
    "model_query": [ "inference_ready", "onnx_model", [ "^^", "substitute", "model_name=#{model_name}#" ] ],
    "model_entry": [ "^", "byquery", [[ "^^", "get", "model_query" ]], {}, ["model_query"] ],
    "model_path": [ "^^", "execute", [[
        [ "get", "model_entry" ],
        [ "get_path" ]
    ]] ],
    "dataset_name": [ "^^", "dig", "model_entry.dataset_name" ],
    "model_input_layers_tms": [ "^^", "dig", "model_entry.input_layers_tms" ],

    "squad_dataset_query":[ "downloaded", "squad_original" ],
    "squad_dataset_entry": [ "^", "byquery", [[ "^^", "get", "squad_dataset_query" ]], {}, ["squad_dataset_query"] ],
    "squad_dataset_original_path": [ "^^", "execute", [[
        [ "get", "squad_dataset_entry" ],
        [ "get_path" ]
    ]] ],

    "batch_size": 1,

    "dataset_max_seq_length": 384,
    "tokenized_squad_query":[ "tokenized", "squad_v1_1","calibration=no" , [ "^^", "substitute", "dataset_max_seq_length=#{dataset_max_seq_length}#" ] ],
    "tokenized_squad_entry": [ "^", "byquery", [[ "^^", "get", "tokenized_squad_query" ]], {}, ["tokenized_squad_query"] ],
    "tokenized_squad_path": [ "^^", "execute", [[
        [ "get", "tokenized_squad_entry" ],
        [ "get_path" ]
    ]] ],

    "output_file_name": "script_output.json",
    "framework": "onnx",
    "execution_device": "",
    "verbosity": 2,

    "output_entry": [ "^^", "execute", [[
        [ "get", "__record_entry__" ],
        [ "attach", [ "^", "work_collection" ] ],
        [ "plant", [ "^^", "substitute", [[
            "_parent_entries", [ "AS^IS", "AS^IS", [ "^", "byname", "base_bert_loadgen_experiment" ] ],
            "model_name", "#{model_name}#",
            "model_path","#{model_path}#",
            "model_input_layers_tms", "#{model_input_layers_tms}#",
            "framework", "#{framework}#",
            "dataset_name", "#{dataset_name}#",
            "squad_dataset_original_path", "#{squad_dataset_original_path}#",
            "tokenized_squad_path", "#{tokenized_squad_path}#",
            "sut_name", "#{sut_name}#",
            "program_name", "bert_squad_onnxruntime_loadgen_py",

            "loadgen_scenario", "#{loadgen_scenario}#",
            "loadgen_mode", "#{loadgen_mode}#",
            "loadgen_dataset_size", "#{loadgen_dataset_size}#",
            "loadgen_buffer_size", "#{loadgen_buffer_size}#",
            "loadgen_count_override", "#{loadgen_count_override}#",
            "loadgen_multistreamness", "#{loadgen_multistreamness}#",
            "loadgen_mlperf_conf_path", "#{loadgen_mlperf_conf_path}#",
 
            "mlperf_inference_path", "#{mlperf_inference_path}#",
            "batch_size", "#{batch_size}#",
            "execution_device", "#{execution_device}#",
            "verbosity", "#{verbosity}#",

            "tags", [ "loadgen_output", "bert_squad" ]
         ]] ] ],
         [ "save" ]
      ]] ],

    "rel_script_path": "bert_squad_onnxruntime_loadgen.py",
    "script_extra_params": [ "^^", "get", "input_parameters_file_path" ]
}
