{
    "_parent_entries": [ [ "^", "byname", "python_script" ], [ "^", "byname", "base_loadgen_program" ] ],
    "_producer_rules": [
        [ [ "loadgen_output", "classified_imagenet", "framework=pytorch" ], [["run"]], { "return_saved_record_entry": true } ]
    ],

    "resolution": 224,
    "preprocessed_images_query": [ "preprocessed", "dataset_name=imagenet", [ "^^", "substitute", "resolution=#{resolution}#" ] ],
    "preprocessed_images_dir": [ "^", "execute", [[
        [ "byquery", [[ "^^", "get", "preprocessed_images_query" ]] ],
        [ "get_path" ]
    ]], {}, ["preprocessed_images_query"] ],

    "num_gpus": [ "^", "execute", [[
                        [ "byquery", "shell_tool,can_gpu" ],
                        [ "run"  ]
                ]]  ],

    "torchvision_query": [ "^^", "case", [ [ "^^", "get", "num_gpus"] , "0" ,["python_package", "package_name=torchvision"] ], {"default_value": ["python_package", "package_name=torchvision", "with_cuda"] } ],
    "loadgen_query":    [ "python_package", "package_name=mlperf_loadgen" ],

    "python_deps": [
        [ "^", "byquery", [[ "^^", "get", "torchvision_query" ]], {}, ["torchvision_query"] ],
        [ "^", "byquery", "data_loader,imagenet" ],
        [ "^", "byquery", [ [ "^^", "get", "loadgen_query" ] ], {}, ["loadgen_query"] ]
    ],

    "model_name": "resnet50",
    "model_query": [ "inference_ready", "pytorch_model", [ "^^", "substitute", "model_name=#{model_name}#" ] ],
    "model_entry": [ "^", "byquery", [[ "^^", "get", "model_query" ]], {}, ["model_query"] ],
    "model_path": [ "^^", "execute", [[
        [ "get", "model_entry" ],
        [ "get_path" ]
    ]] ],
    "batch_size": 1,
    "framework": "pytorch",
    "verbosity": 2,

    "output_entry": [ "^^", "execute", [[
        [ "get", "__record_entry__" ],
        [ "attach", [ "^", "work_collection" ] ],
        [ "plant", [ "^^", "substitute", [[
            "_parent_entries", [ "AS^IS", "AS^IS", [ "^", "byname", "base_imagenet_loadgen_experiment" ] ],
            "model_name", "#{model_name}#",
            "model_path", "#{model_path}#",
            "model_query", "#{model_query}#",
            "framework", "#{framework}#",
            "preprocessed_images_dir", "#{preprocessed_images_dir}#",
            "sut_name", "#{sut_name}#",
            "program_name", "image_classification_torch_loadgen_py",

            "loadgen_scenario", "#{loadgen_scenario}#",
            "loadgen_mode", "#{loadgen_mode}#",
            "loadgen_dataset_size", "#{loadgen_dataset_size}#",
            "loadgen_buffer_size", "#{loadgen_buffer_size}#",
            "loadgen_count_override", "#{loadgen_count_override}#",
            "loadgen_multistreamness", "#{loadgen_multistreamness}#",
            "loadgen_mlperf_conf_path", "#{loadgen_mlperf_conf_path}#",

            "verbosity", "#{verbosity}#",
            "batch_size", "#{batch_size}#",
            "preprocessed_images_dir", "#{preprocessed_images_dir}#",

            "tags", [ "loadgen_output", "classified_imagenet" ]
         ]] ] ],
         [ "save" ]
    ]] ],

    "in_dir": [ "^^", "execute", [[
        [ "get", "output_entry" ],
        [ "get_path" ]
    ]] ],
    "input_parameters_file_path": [ "^^", "execute", [[
        [ "get", "output_entry" ],
        [ "plant", [ "loadgen_user_conf_path",[ "^^", "get", "loadgen_user_conf_path" ] ]],
        [ "save", [], { "deterministic": false } ],
        [ "get_path", "data_axs.json" ]
    ]] ],
    "errorize_output": true,
    "rel_script_path": "torch_loadgen_classifier.py",

    "script_extra_params": [ "^^", "substitute", "\"#{input_parameters_file_path}#\"" ]
}
